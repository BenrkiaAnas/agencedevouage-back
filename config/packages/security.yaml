security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User: sha512
        App\Entity\Admin: sha512

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        main:
            entity:
                class:  App\Entity\Admin
                property: username
#        fos_userbundle:
#            id: fos_user.user_provider.username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
#        main:
#            anonymous: true

#        api:
#            pattern: ^/api
#            stateless: true
#            anonymous: true
#            json_login:
#                check_path: /api/login_check
#                success_handler: lexik_jwt_authentication.handler.authentication_success
#                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                - App\Security\TokenAuthenticator


            http_basic: true
                # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            form_login: true
                # https://symfony.com/doc/current/security/form_login_setup.html

        # Easy way to control access for large sections of your site
        # Note: Only the *first* access control that matches will be used
    access_control:
#        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        #  - { path: ^/,       roles: ROLE_ADMIN }
        - { path: ^/login,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login2,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin,       roles: ROLE_ADMIN }
